(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6579],{9181:function(s,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/customizing-colors",function(){return a(75697)}])},75697:function(s,n,a){"use strict";a.r(n),a.d(n,{default:function(){return j}});var e=a(85893),t=a(11151),p=a(72788),o=a(36336),l=a(50224),c=a(67294),r=a(69808),i=a.n(r),u=a(26905),k=a.n(u),d=a(11355);function m(s){let{colors:n}=s;return(0,e.jsx)("div",{className:"grid grid-cols-[repeat(auto-fit,minmax(8rem,1fr))] gap-x-2 gap-y-8 sm:grid-cols-1",children:n.map((s,n)=>{let a=Array.isArray(s)?s[0]:s.replace(/(?:^|-)([a-z])/gi,(s,n)=>` ${n.toUpperCase()}`).trim(),t=Array.isArray(s)?s[1]:s,p="string"==typeof t?[50,100,200,300,400,500,600,700,800,900,950].map(s=>({name:s,value:k()(i(),[t,s])})):Object.keys(t).map(s=>({name:s,value:t[s]}));return(0,e.jsxs)("div",{className:"2xl:contents",children:[(0,e.jsx)("div",{className:"text-sm font-semibold text-slate-900 dark:text-slate-200 2xl:col-end-1 2xl:pt-2.5",children:a.split("").flatMap((s,n)=>0!==n&&s.toUpperCase()===s?[" ",s]:[s]).join("")}),(0,e.jsx)("div",{className:"grid mt-3 grid-cols-1 sm:grid-cols-11 gap-y-3 gap-x-2 sm:mt-2 2xl:mt-0",children:p.map((s,n)=>(0,e.jsx)(y,{...s},n))})]},a)})})}function y(s){let{name:n,value:a}=s,[{state:t},p]=(0,c.useState)({state:"idle"});return(0,c.useEffect)(()=>{if("copied"===t){let s=window.setTimeout(()=>{p({state:"idle"})},1500);return()=>{window.clearTimeout(s)}}},[t]),(0,e.jsxs)("div",{className:"relative flex",children:[(0,e.jsxs)("div",{className:"flex items-center gap-x-3 w-full cursor-pointer sm:block sm:space-y-1.5",onClick:()=>navigator.clipboard.writeText(a).then(()=>{p({state:"copied"})}),children:[(0,e.jsx)("div",{className:"h-10 w-10 rounded dark:ring-1 dark:ring-inset dark:ring-white/10 sm:w-full",style:{backgroundColor:a}}),(0,e.jsxs)("div",{className:"px-0.5",children:[(0,e.jsx)("div",{className:"w-6 font-medium text-xs text-slate-900 2xl:w-full dark:text-white",children:n}),(0,e.jsx)("div",{className:"text-slate-500 text-xs font-mono lowercase dark:text-slate-400 sm:text-[0.625rem] md:text-xs lg:text-[0.625rem] 2xl:text-xs",children:a})]})]}),(0,e.jsx)(d.u,{className:"absolute bottom-full left-1/2 mb-3.5 pb-1 -translate-x-1/2",show:"copied"===t,enter:"transform ease-out duration-200 transition origin-bottom",enterFrom:"scale-95 translate-y-0.5 opacity-0",enterTo:"scale-100 translate-y-0 opacity-100",leave:"transition ease-in duration-100",leaveFrom:"opacity-100",leaveTo:"opacity-0",children:(0,e.jsxs)("div",{className:"relative bg-sky-500 text-white font-mono text-[0.625rem] leading-6 font-medium px-1.5 rounded-lg",children:["Copied",(0,e.jsx)("svg",{"aria-hidden":"true",width:"16",height:"6",viewBox:"0 0 16 6",className:"text-sky-500 absolute top-full left-1/2 -mt-px -ml-2",children:(0,e.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M15 0H1V1.00366V1.00366V1.00371H1.01672C2.72058 1.0147 4.24225 2.74704 5.42685 4.72928C6.42941 6.40691 9.57154 6.4069 10.5741 4.72926C11.7587 2.74703 13.2803 1.0147 14.9841 1.00371H15V0Z",fill:"currentColor"})})]})})]})}a(64637);var g=a(30196);let h=p.L,f=o.X_;function x(s){let n=Object.assign({p:"p",code:"code",a:"a",hr:"hr",pre:"pre",em:"em"},(0,t.ah)(),s.components),{Editor:a,Example:p}=n;return a||w("Editor",!0),p||w("Example",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(l.X,{hidden:!0,level:2,id:"default-color-palette",children:"Default color palette"}),"\n",(0,e.jsx)(n.p,{children:"Tailwind includes an expertly-crafted default color palette out-of-the-box that is a great starting point if you don’t have your own specific branding in mind."}),"\n",(0,e.jsx)("div",{className:"mt-10"}),"\n",(0,e.jsx)(m,{colors:["slate","gray","zinc","neutral","stone","red","orange","amber","yellow","lime","green","emerald","teal","cyan","sky","blue","indigo","violet","purple","fuchsia","pink","rose"]}),"\n",(0,e.jsx)("div",{className:"mt-10"}),"\n",(0,e.jsxs)(n.p,{children:["But when you do need to customize your palette, you can configure your colors under the ",(0,e.jsx)(n.code,{children:"colors"})," key in the ",(0,e.jsx)(n.code,{children:"theme"})," section of your ",(0,e.jsx)(n.code,{children:"tailwind.config.js"})," file:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Configure your color palette here</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(n.p,{children:["When it comes to building a custom color palette, you can either ",(0,e.jsx)(n.a,{href:"#using-custom-colors",children:"configure your own custom colors"})," from scratch if you know exactly what you want, or ",(0,e.jsx)(n.a,{href:"#using-the-default-colors",children:"curate your colors"})," from our extensive included color palette if you want a head start."]}),"\n",(0,e.jsx)(n.hr,{}),"\n",(0,e.jsx)(l.X,{level:2,id:"using-custom-colors",children:"Using custom colors"}),"\n",(0,e.jsxs)(n.p,{children:["If you’d like to completely replace the default color palette with your own custom colors, add your colors directly under the ",(0,e.jsx)(n.code,{children:"theme.colors"})," section of your configuration file:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">transparent</span><span class="token operator">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token string">\'currentColor\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'white\'</span><span class="token operator">:</span> <span class="token string">\'#ffffff\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'purple\'</span><span class="token operator">:</span> <span class="token string">\'#3f3cbb\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'midnight\'</span><span class="token operator">:</span> <span class="token string">\'#121063\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'metal\'</span><span class="token operator">:</span> <span class="token string">\'#565584\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'tahiti\'</span><span class="token operator">:</span> <span class="token string">\'#3ab7bf\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'silver\'</span><span class="token operator">:</span> <span class="token string">\'#ecebff\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'bubble-gum\'</span><span class="token operator">:</span> <span class="token string">\'#ff77e9\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'bermuda\'</span><span class="token operator">:</span> <span class="token string">\'#78dcca\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(n.p,{children:["By default, these colors will be made available everywhere in the framework where you use colors, like the ",(0,e.jsx)(n.a,{href:"/docs/text-color",children:"text color"})," utilities, ",(0,e.jsx)(n.a,{href:"/docs/border-color",children:"border color"})," utilities, ",(0,e.jsx)(n.a,{href:"/docs/background-color",children:"background color"})," utilities, and more."]}),"\n",(0,e.jsx)(n.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="code-highlight bg-code-highlight">bg-midnight</span> <span class="code-highlight bg-code-highlight">text-tahiti</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- ... --></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,e.jsxs)(n.p,{children:["Don’t forget to include values like ",(0,e.jsx)(n.code,{children:"transparent"})," and ",(0,e.jsx)(n.code,{children:"currentColor"})," if you want to use them in your project."]}),"\n",(0,e.jsx)(l.X,{level:3,id:"color-object-syntax",children:"Color object syntax"}),"\n",(0,e.jsx)(n.p,{children:"When your palette includes multiple shades of the same color, it can be convenient to group them together using our nested color object syntax:"}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">transparent</span><span class="token operator">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token string">\'currentColor\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'white\'</span><span class="token operator">:</span> <span class="token string">\'#ffffff\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'tahiti\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token number">100</span><span class="token operator">:</span> <span class="token string">\'#cffafe\'</span><span class="token punctuation">,</span>\n        <span class="token number">200</span><span class="token operator">:</span> <span class="token string">\'#a5f3fc\'</span><span class="token punctuation">,</span>\n        <span class="token number">300</span><span class="token operator">:</span> <span class="token string">\'#67e8f9\'</span><span class="token punctuation">,</span>\n        <span class="token number">400</span><span class="token operator">:</span> <span class="token string">\'#22d3ee\'</span><span class="token punctuation">,</span>\n        <span class="token number">500</span><span class="token operator">:</span> <span class="token string">\'#06b6d4\'</span><span class="token punctuation">,</span>\n        <span class="token number">600</span><span class="token operator">:</span> <span class="token string">\'#0891b2\'</span><span class="token punctuation">,</span>\n        <span class="token number">700</span><span class="token operator">:</span> <span class="token string">\'#0e7490\'</span><span class="token punctuation">,</span>\n        <span class="token number">800</span><span class="token operator">:</span> <span class="token string">\'#155e75\'</span><span class="token punctuation">,</span>\n        <span class="token number">900</span><span class="token operator">:</span> <span class="token string">\'#164e63\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(n.p,{children:["The nested keys will be combined with the parent key to form class names like ",(0,e.jsx)(n.code,{children:"bg-tahiti-400"}),"."]}),"\n",(0,e.jsxs)(n.p,{children:["Like many other places in Tailwind, the special ",(0,e.jsx)(n.code,{children:"DEFAULT"})," key can be used when you want to define a value with no suffix:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// ...</span>\n      <span class="token string-property property">\'tahiti\'</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">light</span><span class="token operator">:</span> <span class="token string">\'#67e8f9\'</span><span class="token punctuation">,</span>\n        <span class="token constant">DEFAULT</span><span class="token operator">:</span> <span class="token string">\'#06b6d4\'</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">dark</span><span class="token operator">:</span> <span class="token string">\'#0e7490\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(n.p,{children:["This will create classes like ",(0,e.jsx)(n.code,{children:"bg-tahiti"}),", ",(0,e.jsx)(n.code,{children:"bg-tahiti-light"}),", and ",(0,e.jsx)(n.code,{children:"bg-tahiti-dark"}),"."]}),"\n",(0,e.jsx)(l.X,{level:3,id:"arbitrary-values",children:"Arbitrary values"}),"\n",(0,e.jsx)(n.p,{children:"If you need a one-off custom color in your project, consider using Tailwind’s arbitrary value notation to generate a class for that color on-demand instead of adding it to your theme:"}),"\n",(0,e.jsx)(p,{containerClassName:"mt-4 -mb-3",html:'<div class="grid place-items-center">\n  <button type="button" class="bg-[#1da1f2] text-white inline-flex pl-3.5 pr-4 py-3 font-medium rounded-md items-center text-sm space-x-3">\n    <svg width="20" height="20" fill="currentColor"><path d="M6.29 18.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0020 3.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.073 4.073 0 01.8 7.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 010 16.407a11.616 11.616 0 006.29 1.84"></path></svg>\n    <span>Share on Twitter</span>\n  </button>\n</div>'}),"\n",(0,e.jsx)(n.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-[#1da1f2] text-white ...<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- ... --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>\n  Share on Twitter\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,e.jsxs)(n.p,{children:["Learn more in the ",(0,e.jsx)(n.a,{href:"/docs/adding-custom-styles#using-arbitrary-values",children:"using arbitrary values"})," documentation."]}),"\n",(0,e.jsx)(l.X,{level:3,id:"generating-colors",children:"Generating colors"}),"\n",(0,e.jsx)(n.p,{children:"If you’re wondering how to automatically generate the 50–950 shades of your own custom colors, bad news — color is complicated and despite trying dozens of different tools, we’ve yet to find one that does a good job generating color palettes like this automatically."}),"\n",(0,e.jsx)(n.p,{children:"We picked all of Tailwind’s default colors by hand, meticulously balancing them by eye and testing them in real designs to make sure we were happy with them."}),"\n",(0,e.jsxs)(n.p,{children:["Two useful tools we ",(0,e.jsx)(n.em,{children:"can"})," recommend are ",(0,e.jsx)(n.a,{href:"https://palettte.app/",children:"Palettte"})," and ",(0,e.jsx)(n.a,{href:"https://colorbox.io/",children:"ColorBox"})," — they won’t do the work for you but their interfaces are well-designed for doing this sort of work."]}),"\n",(0,e.jsx)(n.hr,{}),"\n",(0,e.jsx)(l.X,{level:2,id:"using-the-default-colors",children:"Using the default colors"}),"\n",(0,e.jsxs)(n.p,{children:["If you don’t have a set of completely custom colors in mind for your project, you can curate your colors from our default palette by importing ",(0,e.jsx)(n.code,{children:"tailwindcss/colors"})," in your configuration file and choosing the colors you want to use:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/colors\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">transparent</span><span class="token operator">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token string">\'currentColor\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">black</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">black</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">white</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">white</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">gray</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">gray</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">emerald</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">emerald</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">indigo</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">indigo</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">yellow</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">yellow</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(n.p,{children:["This can be helpful if you want to deliberately limit your color palette and reduce the number of class names suggested by ",(0,e.jsx)(n.a,{href:"/docs/editor-setup#intelli-sense-for-vs-code",children:"IntelliSense"}),"."]}),"\n",(0,e.jsx)(l.X,{level:3,id:"aliasing-color-names",children:"Aliasing color names"}),"\n",(0,e.jsx)(n.p,{children:"You can also alias the colors in our default palette to make the names simpler and easier to remember:"}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token block"><span class="token keyword">const</span><span class="token plain"> colors </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/colors\'</span><span class="token punctuation">)</span><span class="token plain"></span>\n</span><span class="token plain block">\n</span><span class="token block"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">  </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">    </span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">      </span><span class="token literal-property property">transparent</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'transparent\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">      </span><span class="token literal-property property">current</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'currentColor\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">      </span><span class="token literal-property property">black</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">black</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">      </span><span class="token literal-property property">white</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">white</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block -mx-5 pl-4 pr-5 border-l-4 border-sky-400 bg-sky-300/[0.15]"><span class="token plain">      </span><span class="token literal-property property">gray</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">slate</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block -mx-5 pl-4 pr-5 border-l-4 border-sky-400 bg-sky-300/[0.15]"><span class="token plain">      </span><span class="token literal-property property">green</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">emerald</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block -mx-5 pl-4 pr-5 border-l-4 border-sky-400 bg-sky-300/[0.15]"><span class="token plain">      </span><span class="token literal-property property">purple</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">violet</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block -mx-5 pl-4 pr-5 border-l-4 border-sky-400 bg-sky-300/[0.15]"><span class="token plain">      </span><span class="token literal-property property">yellow</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">amber</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block -mx-5 pl-4 pr-5 border-l-4 border-sky-400 bg-sky-300/[0.15]"><span class="token plain">      </span><span class="token literal-property property">pink</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">fuchsia</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsxs)(n.p,{children:["This is especially common for grays, as you usually only use one set in any given project and it’s nice to be able to type ",(0,e.jsx)(n.code,{children:"bg-gray-300"})," instead of ",(0,e.jsx)(n.code,{children:"bg-neutral-300"})," for example."]}),"\n",(0,e.jsx)(l.X,{level:3,id:"adding-additional-colors",children:"Adding additional colors"}),"\n",(0,e.jsxs)(n.p,{children:["If you’d like to add a brand new color to the default palette, add it in the ",(0,e.jsx)(n.code,{children:"theme.extend.colors"})," section of your configuration file:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">brown</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token number">50</span><span class="token operator">:</span> <span class="token string">\'#fdf8f6\'</span><span class="token punctuation">,</span>\n          <span class="token number">100</span><span class="token operator">:</span> <span class="token string">\'#f2e8e5\'</span><span class="token punctuation">,</span>\n          <span class="token number">200</span><span class="token operator">:</span> <span class="token string">\'#eaddd7\'</span><span class="token punctuation">,</span>\n          <span class="token number">300</span><span class="token operator">:</span> <span class="token string">\'#e0cec7\'</span><span class="token punctuation">,</span>\n          <span class="token number">400</span><span class="token operator">:</span> <span class="token string">\'#d2bab0\'</span><span class="token punctuation">,</span>\n          <span class="token number">500</span><span class="token operator">:</span> <span class="token string">\'#bfa094\'</span><span class="token punctuation">,</span>\n          <span class="token number">600</span><span class="token operator">:</span> <span class="token string">\'#a18072\'</span><span class="token punctuation">,</span>\n          <span class="token number">700</span><span class="token operator">:</span> <span class="token string">\'#977669\'</span><span class="token punctuation">,</span>\n          <span class="token number">800</span><span class="token operator">:</span> <span class="token string">\'#846358\'</span><span class="token punctuation">,</span>\n          <span class="token number">900</span><span class="token operator">:</span> <span class="token string">\'#43302b\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(n.p,{children:["You can also use ",(0,e.jsx)(n.code,{children:"theme.extend.colors"})," to add additional shades to an existing color if it’s needed for your design:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">blue</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token number">950</span><span class="token operator">:</span> <span class="token string">\'#17275c\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(l.X,{level:3,id:"disabling-a-default-color",children:"Disabling a default color"}),"\n",(0,e.jsxs)(n.p,{children:["If you’d like to disable any of the default colors, the best approach is to override the default color palette and just include the colors you ",(0,e.jsx)(n.em,{children:"do"})," want:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/colors\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">transparent</span><span class="token operator">:</span> <span class="token string">\'transparent\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token string">\'currentColor\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">black</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">black</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">white</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">white</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">gray</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">gray</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">emerald</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">emerald</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">indigo</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">indigo</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">yellow</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">yellow</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(n.hr,{}),"\n",(0,e.jsx)(l.X,{level:2,id:"naming-your-colors",children:"Naming your colors"}),"\n",(0,e.jsxs)(n.p,{children:["Tailwind uses literal color names ",(0,e.jsx)(n.em,{children:"(like red, green, etc.)"})," and a numeric scale ",(0,e.jsx)(n.em,{children:"(where 50 is light and 900 is dark)"})," by default. We think this is the best choice for most projects, and have found it easier to maintain than using abstract names like ",(0,e.jsx)(n.code,{children:"primary"})," or ",(0,e.jsx)(n.code,{children:"danger"}),"."]}),"\n",(0,e.jsx)(n.p,{children:"That said, you can name your colors in Tailwind whatever you like, and if you’re working on a project that needs to support multiple themes for example, it might make sense to use more abstract names:"}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">\'#5c6ac4\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">\'#ecc94b\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// ...</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(n.p,{children:"You can configure those colors explicitly like we have above, or you can pull in colors from our default color palette and alias them:"}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/colors\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">primary</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">indigo</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">secondary</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">yellow</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">neutral</span><span class="token operator">:</span> colors<span class="token punctuation">.</span><span class="token property-access">gray</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(n.p,{children:"Again, we recommend sticking to the default naming convention for most projects, and only using abstract names if you have a really good reason."}),"\n",(0,e.jsx)(n.hr,{}),"\n",(0,e.jsx)(l.X,{level:2,id:"using-css-variables",children:"Using CSS variables"}),"\n",(0,e.jsxs)(n.p,{children:["If you’d like to define your colors as CSS variables, you’ll need to define those variables as just the color ",(0,e.jsx)(n.em,{children:"channels"})," if you want them to work with the ",(0,e.jsx)(n.a,{href:"/docs/text-color#changing-the-opacity",children:"opacity modifier syntax"}),":"]}),"\n",(0,e.jsx)(g.Vw,{children:"Define your CSS variables as channels with no color space function"}),"\n",(0,e.jsx)(a,{filename:"main.css",code:'<pre class="language-css"><code class="language-css"><span class="token block"><span class="token atrule rule">@tailwind</span><span class="token atrule"> base</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain"></span><span class="token atrule rule">@tailwind</span><span class="token atrule"> components</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain"></span><span class="token atrule rule">@tailwind</span><span class="token atrule"> utilities</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token plain block">\n</span><span class="token block"><span class="token plain"></span><span class="token atrule rule">@layer</span><span class="token atrule"> base</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">  </span><span class="token selector pseudo-class">:root</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token block -mx-5 pl-4 pr-5 border-l-4 border-sky-400 bg-sky-300/[0.15]"><span class="token plain">    </span><span class="token variable">--color-primary</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token number">255</span><span class="token plain"> </span><span class="token number">115</span><span class="token plain"> </span><span class="token number">179</span><span class="token punctuation">;</span><span class="token plain"></span>\n</span><span class="token block -mx-5 pl-4 pr-5 border-l-4 border-sky-400 bg-sky-300/[0.15]"><span class="token plain">    </span><span class="token variable">--color-secondary</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token number">111</span><span class="token plain"> </span><span class="token number">114</span><span class="token plain"> </span><span class="token number">185</span><span class="token punctuation">;</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">    </span><span class="token comment">/* ... */</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(g.qm,{children:"Don’t include the color space function or opacity modifiers won’t work"}),"\n",(0,e.jsx)(a,{filename:"main.css",code:'<pre class="language-css"><code class="language-css"><span class="token block"><span class="token atrule rule">@tailwind</span><span class="token atrule"> base</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain"></span><span class="token atrule rule">@tailwind</span><span class="token atrule"> components</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain"></span><span class="token atrule rule">@tailwind</span><span class="token atrule"> utilities</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token plain block">\n</span><span class="token block"><span class="token plain"></span><span class="token atrule rule">@layer</span><span class="token atrule"> base</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">  </span><span class="token selector pseudo-class">:root</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token block -mx-5 pl-4 pr-5 border-l-4 border-sky-400 bg-sky-300/[0.15]"><span class="token plain">    </span><span class="token variable">--color-primary</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token plain"> </span><span class="token number">115</span><span class="token plain"> </span><span class="token number">179</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span>\n</span><span class="token block -mx-5 pl-4 pr-5 border-l-4 border-sky-400 bg-sky-300/[0.15]"><span class="token plain">    </span><span class="token variable">--color-secondary</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token function">rgb</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token plain"> </span><span class="token number">114</span><span class="token plain"> </span><span class="token number">185</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">    </span><span class="token comment">/* ... */</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token block"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsxs)(n.p,{children:["Then define your colors in your configuration file, being sure to include the color space you’re using, and the special ",(0,e.jsx)(n.code,{children:"<alpha-value>"})," placeholder that Tailwind will use to inject the alpha value when using an opacity modifier:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// Using modern `rgb`</span>\n      <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">\'rgb(var(--color-primary) / &lt;alpha-value>)\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">\'rgb(var(--color-secondary) / &lt;alpha-value>)\'</span><span class="token punctuation">,</span>\n\n      <span class="token comment">// Using modern `hsl`</span>\n      <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">\'hsl(var(--color-primary) / &lt;alpha-value>)\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">\'hsl(var(--color-secondary) / &lt;alpha-value>)\'</span><span class="token punctuation">,</span>\n\n      <span class="token comment">// Using legacy `rgba`</span>\n      <span class="token literal-property property">primary</span><span class="token operator">:</span> <span class="token string">\'rgba(var(--color-primary), &lt;alpha-value>)\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">secondary</span><span class="token operator">:</span> <span class="token string">\'rgba(var(--color-secondary), &lt;alpha-value>)\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(n.p,{children:["When defining your colors this way, make sure that the format of your CSS variables is correct for the color function you are using. You’ll want to use spaces if using the modern ",(0,e.jsx)(n.a,{href:"https://css-tricks.com/the-expanding-gamut-of-color-on-the-web/#aa-a-tale-of-new-syntaxes",children:"space-separated syntax"}),", and commas if using legacy functions like ",(0,e.jsx)(n.code,{children:"rgba"})," or ",(0,e.jsx)(n.code,{children:"hsla"}),":"]}),"\n",(0,e.jsx)(a,{filename:"main.css",code:'<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>\n<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span>\n\n<span class="token atrule"><span class="token rule">@layer</span> base</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token pseudo-class">:root</span></span> <span class="token punctuation">{</span>\n    <span class="token comment">/* For rgb(255 115 179 / &lt;alpha-value>) */</span>\n    <span class="token variable">--color-primary</span><span class="token punctuation">:</span> <span class="token number">255</span> <span class="token number">115</span> <span class="token number">179</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/* For hsl(198deg 93% 60% / &lt;alpha-value>) */</span>\n    <span class="token variable">--color-primary</span><span class="token punctuation">:</span> <span class="token number">198</span><span class="token unit">deg</span> <span class="token number">93</span><span class="token unit">%</span> <span class="token number">60</span><span class="token unit">%</span><span class="token punctuation">;</span>\n\n    <span class="token comment">/* For rgba(255, 115, 179, &lt;alpha-value>) */</span>\n    <span class="token variable">--color-primary</span><span class="token punctuation">:</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'})]})}function b(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,e.jsx)(f,Object.assign({},s,{children:(0,e.jsx)(x,s)}))}var j=b;function w(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}b.layoutProps={Layout:h,meta:{title:"Customizing Colors",shortTitle:"Colors",description:"Customizing the default color palette for your project."},slug:"customizing-colors",tableOfContents:[{title:"Default color palette",slug:"default-color-palette",children:[]},{title:"Using custom colors",slug:"using-custom-colors",children:[{title:"Color object syntax",slug:"color-object-syntax",children:[]},{title:"Arbitrary values",slug:"arbitrary-values",children:[]},{title:"Generating colors",slug:"generating-colors",children:[]}]},{title:"Using the default colors",slug:"using-the-default-colors",children:[{title:"Aliasing color names",slug:"aliasing-color-names",children:[]},{title:"Adding additional colors",slug:"adding-additional-colors",children:[]},{title:"Disabling a default color",slug:"disabling-a-default-color",children:[]}]},{title:"Naming your colors",slug:"naming-your-colors",children:[]},{title:"Using CSS variables",slug:"using-css-variables",children:[]}]}},64637:function(s,n,a){"use strict";a.d(n,{E:function(){return u}});var e=a(85893),t=a(67294),p=a(49808),o=a(86010),l=a(4493);function c(s){let{className:n}=s;return(0,e.jsx)("div",{className:(0,o.Z)("pointer-events-none absolute inset-0",n)})}function r(s){let{children:n,selectedIndex:a,myIndex:t,marker:l}=s,r=a===t,i={leading:r?null:a===t-1?"capped":"normal",trailing:r?null:a===t+1?"capped":"normal"};return(0,e.jsxs)(p.O,{className:(0,o.Z)("flex items-center relative z-10 overflow-hidden px-4 py-1 [&:not(:focus-visible)]:focus:outline-none",r?"text-sky-300":"text-slate-400"),children:[(0,e.jsx)("span",{className:"z-10",children:n}),"close"===l&&(0,e.jsx)("svg",{viewBox:"0 0 4 4",className:"ml-2.5 flex-none w-1 h-1 text-slate-500 overflow-visible",children:(0,e.jsx)("path",{d:"M-1 -1L5 5M5 -1L-1 5",fill:"none",stroke:"currentColor",strokeLinecap:"round"})}),"modified"===l&&(0,e.jsx)("div",{className:"ml-2.5 flex-none w-1 h-1 rounded-full bg-current"}),!r&&(0,e.jsx)(c,{className:(0,o.Z)("bg-slate-700/50 border-y border-slate-500/30","capped"===i.leading&&"border-l rounded-tl","capped"===i.trailing&&"border-r rounded-tr")}),"normal"===i.trailing&&(0,e.jsx)(c,{className:"inset-y-px border-r border-slate-200/5 z-20"}),r&&(0,e.jsx)(c,{className:"border-b border-b-sky-300"})]})}let i={plain(s){let{children:n}=s;return(0,e.jsx)("div",{className:"not-prose bg-slate-800 rounded-xl shadow-md",children:n})},framed(s){let{children:n,...a}=s;return(0,e.jsx)(l.RQ,{...a,children:(0,e.jsx)("div",{className:"not-prose bg-slate-800 rounded-tl-xl shadow-md",children:n})})}};function u(s){let{children:n,style:a="plain",actions:l,...c}=s,[u,k]=(0,t.useState)(0),d=i[a];return(0,e.jsx)(d,{...c,children:(0,e.jsxs)(p.O.Group,{as:"div",onChange:k,children:[(0,e.jsxs)("div",{className:"flex",children:[(0,e.jsx)(p.O.List,{className:"flex text-slate-400 text-xs leading-6 overflow-hidden rounded-tl-xl pt-2",children:n.map((s,n)=>(0,e.jsx)(r,{myIndex:n,selectedIndex:u,children:s.props.filename},s.props.filename))}),(0,e.jsx)("div",{className:"flex-auto flex pt-2 rounded-tr-xl overflow-hidden",children:(0,e.jsx)("div",{className:(0,o.Z)("flex-auto flex justify-end bg-slate-700/50 border-y border-slate-500/30 pr-4",u===n.length-1?"rounded-tl border-l":"")})}),l?(0,e.jsx)("div",{className:"absolute top-2 right-4 h-8 flex",children:l({selectedIndex:u})}):null]}),(0,e.jsx)(p.O.Panels,{className:"flex overflow-auto",children:n.map(s=>(0,e.jsx)(p.O.Panel,{className:"flex-none min-w-full p-5 text-sm leading-6 text-slate-50 ligatures-none",...s.props.code?{dangerouslySetInnerHTML:{__html:s.props.code}}:{children:s.props.children}},s.props.filename))})]})})}},30196:function(s,n,a){"use strict";a.d(n,{$o:function(){return o},Vw:function(){return t},qm:function(){return p}});var e=a(85893);function t(s){let{children:n}=s;return(0,e.jsxs)("div",{className:"flex items-start my-6 space-x-4",children:[(0,e.jsxs)("div",{className:"relative mt-1 w-4 h-4 rounded-full bg-cyan-500 text-white flex items-center justify-center ring-2 ring-cyan-500 dark:bg-sky-500 dark:ring-sky-500",children:[(0,e.jsx)("svg",{width:"6",height:"4.5",className:"overflow-visible","aria-hidden":"true",children:(0,e.jsx)("path",{d:"M6 0L2 4.5L0 2.5",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})}),(0,e.jsx)("div",{className:"absolute top-full mt-1 left-[0.46875rem] w-px h-[1.375rem] bg-cyan-500/30 rounded-full dark:bg-sky-400/30"})]}),(0,e.jsx)("p",{className:"m-0 flex-1 text-base font-semibold text-slate-900 dark:text-slate-200",children:n})]})}function p(s){let{children:n}=s;return(0,e.jsxs)("div",{className:"flex items-start my-6 space-x-4",children:[(0,e.jsxs)("div",{className:"relative mt-1 w-4 h-4 rounded-full bg-rose-400 text-white flex items-center justify-center ring-2 ring-rose-400 dark:bg-red-400 dark:ring-red-400",children:[(0,e.jsx)("svg",{width:"6",height:"6",className:"overflow-visible","aria-hidden":"true",children:(0,e.jsx)("path",{d:"M0 0L6 6M6 0L0 6",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})}),(0,e.jsx)("div",{className:"absolute top-full mt-1 left-[0.46875rem] w-px h-[1.375rem] bg-rose-200 rounded-full dark:bg-red-200/25"})]}),(0,e.jsx)("p",{className:"m-0 flex-1 text-base font-semibold text-slate-900 dark:text-slate-200",children:n})]})}function o(s){let{children:n}=s;return(0,e.jsxs)("div",{className:"mt-6 -mb-1 flex space-x-2",children:[(0,e.jsx)("svg",{className:"flex-none w-5 h-5 text-slate-400 dark:text-slate-600",viewBox:"0 0 20 20",fill:"currentColor","aria-hidden":"true",children:(0,e.jsx)("path",{fillRule:"evenodd",d:"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z",clipRule:"evenodd"})}),(0,e.jsx)("p",{className:"m-0 text-slate-700 text-sm font-medium dark:text-slate-200",children:n})]})}},72788:function(s,n,a){"use strict";a.d(n,{L:function(){return l}});var e=a(85893),t=a(97903),p=a(77929),o=a(87308);function l(s){return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(p.Dx,{children:s.layoutProps.meta.metaTitle||s.layoutProps.meta.title}),(0,e.jsx)(t.C,{nav:o.u,...s})]})}l.nav=o.u}},function(s){s.O(0,[3430,2152,9219,9495,224,7308,9774,2888,179],function(){return s(s.s=9181)}),_N_E=s.O()}]);