(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8238],{29924:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/screens",function(){return a(70212)}])},70212:function(n,s,a){"use strict";a.r(s);var e=a(85893),t=a(11151),p=a(72788),o=a(36336),r=a(50224);let c=p.L,l=o.X_;function i(n){let s=Object.assign({p:"p",code:"code",a:"a",pre:"pre",hr:"hr"},(0,t.ah)(),n.components),{Editor:a}=s;return a||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Editor",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(r.X,{hidden:!0,level:2,id:"configuring-custom-screens",children:"Configuring custom screens"}),"\n",(0,e.jsxs)(s.p,{children:["You define your project’s breakpoints in the ",(0,e.jsx)(s.code,{children:"theme.screens"})," section of your ",(0,e.jsx)(s.code,{children:"tailwind.config.js"})," file. The keys become your ",(0,e.jsx)(s.a,{href:"/docs/responsive-design",children:"responsive modifiers"})," (like ",(0,e.jsx)(s.code,{children:"md:text-center"}),"), and the values are the ",(0,e.jsx)(s.code,{children:"min-width"})," where that breakpoint should start."]}),"\n",(0,e.jsx)(s.p,{children:"The default breakpoints are inspired by common device resolutions:"}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'sm\'</span><span class="token operator">:</span> <span class="token string">\'640px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 640px) { ... }</span>\n\n      <span class="token string-property property">\'md\'</span><span class="token operator">:</span> <span class="token string">\'768px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 768px) { ... }</span>\n\n      <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token string">\'1024px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1024px) { ... }</span>\n\n      <span class="token string-property property">\'xl\'</span><span class="token operator">:</span> <span class="token string">\'1280px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1280px) { ... }</span>\n\n      <span class="token string-property property">\'2xl\'</span><span class="token operator">:</span> <span class="token string">\'1536px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1536px) { ... }</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"Feel free to have as few or as many screens as you want, naming them in whatever way you’d prefer for your project."}),"\n",(0,e.jsx)(r.X,{level:3,id:"overriding-the-defaults",children:"Overriding the defaults"}),"\n",(0,e.jsxs)(s.p,{children:["To completely replace the default breakpoints, add your custom ",(0,e.jsx)(s.code,{children:"screens"})," configuration directly under the ",(0,e.jsx)(s.code,{children:"theme"})," key:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'sm\'</span><span class="token operator">:</span> <span class="token string">\'576px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 576px) { ... }</span>\n\n      <span class="token string-property property">\'md\'</span><span class="token operator">:</span> <span class="token string">\'960px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 960px) { ... }</span>\n\n      <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token string">\'1440px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1440px) { ... }</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["Any default screens you haven’t overridden (such as ",(0,e.jsx)(s.code,{children:"xl"})," using the above example) will be removed and will not be available as screen modifiers."]}),"\n",(0,e.jsx)(r.X,{level:3,id:"overriding-a-single-screen",children:"Overriding a single screen"}),"\n",(0,e.jsxs)(s.p,{children:["To override a single screen size (like ",(0,e.jsx)(s.code,{children:"lg"}),"), add your custom ",(0,e.jsx)(s.code,{children:"screens"})," value under the ",(0,e.jsx)(s.code,{children:"theme.extend"})," key:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token string">\'992px\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// => @media (min-width: 992px) { ... }</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["This will replace the default ",(0,e.jsx)(s.code,{children:"screens"})," value with the same name, without changing the order of your breakpoints."]}),"\n",(0,e.jsx)(r.X,{level:3,id:"adding-larger-breakpoints",children:"Adding larger breakpoints"}),"\n",(0,e.jsxs)(s.p,{children:["The easiest way to add an additional larger breakpoint is using the ",(0,e.jsx)(s.code,{children:"extend"})," key:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'3xl\'</span><span class="token operator">:</span> <span class="token string">\'1600px\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"This will add your custom screen to the end of the default breakpoint list."}),"\n",(0,e.jsx)(r.X,{level:3,id:"adding-smaller-breakpoints",children:"Adding smaller breakpoints"}),"\n",(0,e.jsxs)(s.p,{children:["If you want to add an additional small breakpoint, you can’t use ",(0,e.jsx)(s.code,{children:"extend"})," because the small breakpoint would be added to the end of the breakpoint list, and breakpoints need to be sorted from smallest to largest in order to work as expected with a min-width breakpoint system."]}),"\n",(0,e.jsxs)(s.p,{children:["Instead, override the entire ",(0,e.jsx)(s.code,{children:"screens"})," key, re-specifying the default breakpoints:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> defaultTheme <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/defaultTheme\'</span><span class="token punctuation">)</span>\n\nmodule<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'xs\'</span><span class="token operator">:</span> <span class="token string">\'475px\'</span><span class="token punctuation">,</span>\n      <span class="token spread operator">...</span>defaultTheme<span class="token punctuation">.</span><span class="token property-access">screens</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["We expose the default theme at ",(0,e.jsx)(s.code,{children:"tailwindcss/defaultTheme"})," so you don’t have to maintain the list of default breakpoints yourself."]}),"\n",(0,e.jsx)(r.X,{level:3,id:"using-custom-screen-names",children:"Using custom screen names"}),"\n",(0,e.jsxs)(s.p,{children:["You can name your custom screens whatever you like, and are not limited to following the ",(0,e.jsx)(s.code,{children:"sm"}),"/",(0,e.jsx)(s.code,{children:"md"}),"/",(0,e.jsx)(s.code,{children:"lg"}),"/",(0,e.jsx)(s.code,{children:"xl"}),"/",(0,e.jsx)(s.code,{children:"2xl"}),"  convention that Tailwind uses by default."]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'tablet\'</span><span class="token operator">:</span> <span class="token string">\'640px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 640px) { ... }</span>\n\n      <span class="token string-property property">\'laptop\'</span><span class="token operator">:</span> <span class="token string">\'1024px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1024px) { ... }</span>\n\n      <span class="token string-property property">\'desktop\'</span><span class="token operator">:</span> <span class="token string">\'1280px\'</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1280px) { ... }</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"Your responsive modifiers will reflect these custom screen names, so using them in your HTML would now look like this:"}),"\n",(0,e.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid grid-cols-1 <span class="code-highlight bg-code-highlight">tablet</span>:grid-cols-2 <span class="code-highlight bg-code-highlight">laptop</span>:grid-cols-3 <span class="code-highlight bg-code-highlight">desktop</span>:grid-cols-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- ... --></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,e.jsx)(s.hr,{}),"\n",(0,e.jsx)(r.X,{level:2,id:"advanced-configuration",children:"Advanced configuration"}),"\n",(0,e.jsxs)(s.p,{children:["By default, breakpoints are min-width to encourage a ",(0,e.jsx)(s.a,{href:"/docs/responsive-design#working-mobile-first",children:"mobile-first"})," workflow. If you need more control over your media queries, you can also define them using an object syntax that lets you specify explicit min-width and max-width values."]}),"\n",(0,e.jsx)(r.X,{level:3,id:"max-width-breakpoints",children:"Max-width breakpoints"}),"\n",(0,e.jsxs)(s.p,{children:["If you want to work with max-width breakpoints instead of min-width, you can specify your screens as objects with a ",(0,e.jsx)(s.code,{children:"max"})," key:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'2xl\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1535px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (max-width: 1535px) { ... }</span>\n\n      <span class="token string-property property">\'xl\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1279px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (max-width: 1279px) { ... }</span>\n\n      <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1023px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (max-width: 1023px) { ... }</span>\n\n      <span class="token string-property property">\'md\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'767px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (max-width: 767px) { ... }</span>\n\n      <span class="token string-property property">\'sm\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'639px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (max-width: 639px) { ... }</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"Make sure to list max-width breakpoints in descending order so that they override each other as expected."}),"\n",(0,e.jsx)(r.X,{level:3,id:"fixed-range-breakpoints",children:"Fixed-range breakpoints"}),"\n",(0,e.jsxs)(s.p,{children:["If you want your breakpoints to specify both a ",(0,e.jsx)(s.code,{children:"min-width"})," and a ",(0,e.jsx)(s.code,{children:"max-width"}),", use the ",(0,e.jsx)(s.code,{children:"min"})," and ",(0,e.jsx)(s.code,{children:"max"})," keys together:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'sm\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'640px\'</span><span class="token punctuation">,</span> <span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'767px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 640px and max-width: 767px) { ... }</span>\n\n      <span class="token string-property property">\'md\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'768px\'</span><span class="token punctuation">,</span> <span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1023px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 768px and max-width: 1023px) { ... }</span>\n\n      <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'1024px\'</span><span class="token punctuation">,</span> <span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1279px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1024px and max-width: 1279px) { ... }</span>\n\n      <span class="token string-property property">\'xl\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'1280px\'</span><span class="token punctuation">,</span> <span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'1535px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1280px and max-width: 1535px) { ... }</span>\n\n      <span class="token string-property property">\'2xl\'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'1536px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token comment">// => @media (min-width: 1536px) { ... }</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s.p,{children:"Unlike regular min-width or max-width breakpoints, breakpoints defined this way will only take effect when the viewport size is explicitly within the defined range."}),"\n",(0,e.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>md:text-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  This text will be centered on medium screens, but revert back\n  to the default (left-aligned) at all other screen sizes.\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,e.jsx)(r.X,{level:3,id:"multi-range-breakpoints",children:"Multi-range breakpoints"}),"\n",(0,e.jsx)(s.p,{children:"Sometimes it can be useful to have a single breakpoint definition apply in multiple ranges."}),"\n",(0,e.jsx)(s.p,{children:"For example, say you have a sidebar and want your breakpoints to be based on the content-area width rather than the entire viewport. You can simulate this by having one of your breakpoints fall back to a smaller breakpoint when the sidebar becomes visible and shrinks the content area:"}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'sm\'</span><span class="token operator">:</span> <span class="token string">\'500px\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'md\'</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token comment">// Sidebar appears at 768px, so revert to `sm:` styles between 768px</span>\n        <span class="token comment">// and 868px, after which the main content area is wide enough again to</span>\n        <span class="token comment">// apply the `md:` styles.</span>\n        <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'668px\'</span><span class="token punctuation">,</span> <span class="token string-property property">\'max\'</span><span class="token operator">:</span> <span class="token string">\'767px\'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">{</span><span class="token string-property property">\'min\'</span><span class="token operator">:</span> <span class="token string">\'868px\'</span><span class="token punctuation">}</span>\n      <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'lg\'</span><span class="token operator">:</span> <span class="token string">\'1100px\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'xl\'</span><span class="token operator">:</span> <span class="token string">\'1400px\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(r.X,{level:3,id:"custom-media-queries",children:"Custom media queries"}),"\n",(0,e.jsxs)(s.p,{children:["If you want full control over the generated media query, use the ",(0,e.jsx)(s.code,{children:"raw"})," key:"]}),"\n",(0,e.jsx)(a,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">theme</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">extend</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">screens</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'tall\'</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">\'raw\'</span><span class="token operator">:</span> <span class="token string">\'(min-height: 800px)\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">// => @media (min-height: 800px) { ... }</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsxs)(s.p,{children:["Media queries defined using the ",(0,e.jsx)(s.code,{children:"raw"})," key will be output as-is, and the ",(0,e.jsx)(s.code,{children:"min"})," and ",(0,e.jsx)(s.code,{children:"max"})," keys will be ignored."]})]})}function u(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,e.jsx)(l,Object.assign({},n,{children:(0,e.jsx)(i,n)}))}s.default=u,u.layoutProps={Layout:c,meta:{title:"Customizing Screens",shortTitle:"Screens",description:"Customizing the default breakpoints for your project."},slug:"screens",tableOfContents:[{title:"Configuring custom screens",slug:"configuring-custom-screens",children:[{title:"Overriding the defaults",slug:"overriding-the-defaults",children:[]},{title:"Overriding a single screen",slug:"overriding-a-single-screen",children:[]},{title:"Adding larger breakpoints",slug:"adding-larger-breakpoints",children:[]},{title:"Adding smaller breakpoints",slug:"adding-smaller-breakpoints",children:[]},{title:"Using custom screen names",slug:"using-custom-screen-names",children:[]}]},{title:"Advanced configuration",slug:"advanced-configuration",children:[{title:"Max-width breakpoints",slug:"max-width-breakpoints",children:[]},{title:"Fixed-range breakpoints",slug:"fixed-range-breakpoints",children:[]},{title:"Multi-range breakpoints",slug:"multi-range-breakpoints",children:[]},{title:"Custom media queries",slug:"custom-media-queries",children:[]}]}]}},72788:function(n,s,a){"use strict";a.d(s,{L:function(){return r}});var e=a(85893),t=a(97903),p=a(77929),o=a(87308);function r(n){return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(p.Dx,{children:n.layoutProps.meta.metaTitle||n.layoutProps.meta.title}),(0,e.jsx)(t.C,{nav:o.u,...n})]})}r.nav=o.u},11151:function(n,s,a){"use strict";a.d(s,{Zo:function(){return r},ah:function(){return p}});var e=a(67294);let t=e.createContext({});function p(n){let s=e.useContext(t);return e.useMemo(()=>"function"==typeof n?n(s):{...s,...n},[s,n])}let o={};function r({components:n,children:s,disableParentContext:a}){let r;return r=a?"function"==typeof n?n({}):n||o:p(n),e.createElement(t.Provider,{value:r},s)}}},function(n){n.O(0,[3430,2152,9495,224,7308,9774,2888,179],function(){return n(n.s=29924)}),_N_E=n.O()}]);