(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7013],{96841:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/dark-mode",function(){return a(65367)}])},65367:function(n,s,a){"use strict";a.r(s);var t=a(85893),e=a(11151),p=a(72788),o=a(36336),c=a(50224);let l=p.L,i=o.X_;function r(n){let s=Object.assign({p:"p",code:"code",pre:"pre",a:"a",hr:"hr",em:"em"},(0,e.ah)(),n.components),{Example:a,Editor:p}=s;return p||d("Editor",!0),a||d("Example",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(c.X,{hidden:!0,level:2,id:"basic-usage",children:"Basic usage"}),"\n",(0,t.jsx)(s.p,{children:"Now that dark mode is a first-class feature of many operating systems, it’s becoming more and more common to design a dark version of your website to go along with the default design."}),"\n",(0,t.jsxs)(s.p,{children:["To make this as easy as possible, Tailwind includes a ",(0,t.jsx)(s.code,{children:"dark"})," variant that lets you style your site differently when dark mode is enabled:"]}),"\n",(0,t.jsx)(a,Object.assign({containerClassName:"mt-4 -mb-3",html:'<div class="grid grid-cols-1 sm:grid-cols-2">\n  <div class="p-8 pt-7">\n    <p class="mb-2 text-sm font-medium text-slate-500">Light mode</p>\n    <div class="bg-white rounded-lg px-6 py-8 ring-1 ring-slate-900/5 shadow-xl">\n      <div>\n        <span class="inline-flex items-center justify-center p-2 bg-indigo-500 rounded-md shadow-lg">\n          <svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />\n          </svg>\n        </span>\n      </div>\n      <h3 class="mt-5 text-base font-medium text-slate-900 tracking-tight">Writes Upside-Down</h3>\n      <p class="mt-2 text-sm text-slate-500">\n        The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.\n      </p>\n    </div>\n  </div>\n  <div class="bg-slate-900 p-8 pt-7">\n    <p class="mb-2 text-sm font-medium text-slate-400">Dark mode</p>\n    <div class="bg-slate-800 rounded-lg px-6 py-8 ring-1 ring-slate-900/5 shadow-xl">\n      <div>\n        <span class="inline-flex items-center justify-center p-2 bg-indigo-500 rounded-md shadow-lg">\n          <svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />\n          </svg>\n        </span>\n      </div>\n      <h3 class="mt-5 text-base font-medium text-white tracking-tight">Writes Upside-Down</h3>\n      <p class="mt-2 text-sm text-slate-400">\n        The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.\n      </p>\n    </div>\n  </div>\n</div>'},{p:"none"})),"\n",(0,t.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-white <span class="code-highlight bg-code-highlight">dark:bg-slate-800</span> rounded-lg px-6 py-8 ring-1 ring-slate-900/5 shadow-xl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline-flex items-center justify-center p-2 bg-indigo-500 rounded-md shadow-lg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h-6 w-6 text-white<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 24 24<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- ... --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-slate-900 <span class="code-highlight bg-code-highlight">dark:text-white</span> mt-5 text-base font-medium tracking-tight<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Writes Upside-Down<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text-slate-500 <span class="code-highlight bg-code-highlight">dark:text-slate-400</span> mt-2 text-sm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    The Zero Gravity Pen can be used to write in any orientation, including upside-down. It even works in outer space.\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,t.jsxs)(s.p,{children:["By default this uses the ",(0,t.jsx)(s.code,{children:"prefers-color-scheme"})," CSS media feature, but you can also build sites that support toggling dark mode manually using the ",(0,t.jsx)(s.a,{href:"#toggling-dark-mode-manually",children:"‘class’ strategy"}),"."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(c.X,{level:2,id:"toggling-dark-mode-manually",children:"Toggling dark mode manually"}),"\n",(0,t.jsxs)(s.p,{children:["If you want to support toggling dark mode manually instead of relying on the operating system preference, use the ",(0,t.jsx)(s.code,{children:"class"})," strategy instead of the ",(0,t.jsx)(s.code,{children:"media"})," strategy:"]}),"\n",(0,t.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">darkMode</span><span class="token operator">:</span> <span class="token string">\'class\'</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,t.jsxs)(s.p,{children:["Now instead of ",(0,t.jsx)(s.code,{children:"dark:{class}"})," classes being applied based on ",(0,t.jsx)(s.code,{children:"prefers-color-scheme"}),", they will be applied whenever ",(0,t.jsx)(s.code,{children:"dark"})," class is present earlier in the HTML tree."]}),"\n",(0,t.jsx)(s.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html"><span class="token comment">&lt;!-- Dark mode not enabled --></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- Will be white --></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="code-highlight bg-code-highlight">bg-white</span> dark:bg-black<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token comment">&lt;!-- ... --></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>\n\n<span class="token comment">&lt;!-- Dark mode enabled --></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="code-highlight bg-code-highlight">dark</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n  <span class="token comment">&lt;!-- Will be black --></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-white <span class="code-highlight bg-code-highlight">dark:bg-black</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token comment">&lt;!-- ... --></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code>'}}),"\n",(0,t.jsxs)(s.p,{children:["If you’ve set ",(0,t.jsx)("a",{href:"/docs/configuration#prefix",children:"a prefix"})," in your Tailwind config, be sure to add that to the ",(0,t.jsx)(s.code,{children:"dark"})," class. For example, if you have a prefix of ",(0,t.jsx)(s.code,{children:"tw-"}),", you’ll need to use the ",(0,t.jsx)(s.code,{children:"tw-dark"})," class to enable dark mode."]}),"\n",(0,t.jsxs)(s.p,{children:["How you add the ",(0,t.jsx)(s.code,{children:"dark"})," class to the ",(0,t.jsx)(s.code,{children:"html"})," element is up to you, but a common approach is to use a bit of JS that reads a preference from somewhere (like ",(0,t.jsx)(s.code,{children:"localStorage"}),") and updates the DOM accordingly."]}),"\n",(0,t.jsx)(c.X,{level:3,id:"supporting-system-preference-and-manual-selection",children:"Supporting system preference and manual selection"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"class"})," strategy can be used to support both the user’s system preference ",(0,t.jsx)(s.em,{children:"or"})," a manually selected mode by using the ",(0,t.jsxs)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia",children:[(0,t.jsx)(s.code,{children:"Window.matchMedia()"})," API"]}),"."]}),"\n",(0,t.jsx)(s.p,{children:"Here’s a simple example of how you can support light mode, dark mode, as well as respecting the operating system preference:"}),"\n",(0,t.jsx)(p,{filename:"spaghetti.js",code:'<pre class="language-js"><code class="language-js"><span class="token comment">// On page load or when changing themes, best to add inline in `head` to avoid FOUC</span>\n<span class="token keyword control-flow">if</span> <span class="token punctuation">(</span><span class="token dom variable">localStorage</span><span class="token punctuation">.</span><span class="token property-access">theme</span> <span class="token operator">===</span> <span class="token string">\'dark\'</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token string">\'theme\'</span> <span class="token keyword">in</span> <span class="token dom variable">localStorage</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token dom variable">window</span><span class="token punctuation">.</span><span class="token method function property-access">matchMedia</span><span class="token punctuation">(</span><span class="token string">\'(prefers-color-scheme: dark)\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token property-access">matches</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token property-access">documentElement</span><span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">add</span><span class="token punctuation">(</span><span class="token string">\'dark\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token punctuation">{</span>\n  <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token property-access">documentElement</span><span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token string">\'dark\'</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// Whenever the user explicitly chooses light mode</span>\n<span class="token dom variable">localStorage</span><span class="token punctuation">.</span><span class="token property-access">theme</span> <span class="token operator">=</span> <span class="token string">\'light\'</span>\n\n<span class="token comment">// Whenever the user explicitly chooses dark mode</span>\n<span class="token dom variable">localStorage</span><span class="token punctuation">.</span><span class="token property-access">theme</span> <span class="token operator">=</span> <span class="token string">\'dark\'</span>\n\n<span class="token comment">// Whenever the user explicitly chooses to respect the OS preference</span>\n<span class="token dom variable">localStorage</span><span class="token punctuation">.</span><span class="token method function property-access">removeItem</span><span class="token punctuation">(</span><span class="token string">\'theme\'</span><span class="token punctuation">)</span></code></pre>'}),"\n",(0,t.jsx)(s.p,{children:"Again you can manage this however you like, even storing the preference server-side in a database and rendering the class on the server — it’s totally up to you."}),"\n",(0,t.jsx)(c.X,{level:3,id:"customizing-the-class-name",children:"Customizing the class name"}),"\n",(0,t.jsx)(s.p,{children:"Some frameworks (like NativeScript) have their own approach to enabling dark mode and add a different class name when dark mode is active."}),"\n",(0,t.jsxs)(s.p,{children:["You can customize the dark mode selector name by setting ",(0,t.jsx)(s.code,{children:"darkMode"})," to an array with your custom selector as the second item:"]}),"\n",(0,t.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">darkMode</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'class\'</span><span class="token punctuation">,</span> <span class="token string">\'[data-mode="dark"]\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span></code></pre>'})]})}function u(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,t.jsx)(i,Object.assign({},n,{children:(0,t.jsx)(r,n)}))}function d(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}s.default=u,u.layoutProps={Layout:l,meta:{title:"Dark Mode",description:"Using Tailwind CSS to style your site in dark mode."},slug:"dark-mode",tableOfContents:[{title:"Basic usage",slug:"basic-usage",children:[]},{title:"Toggling dark mode manually",slug:"toggling-dark-mode-manually",children:[{title:"Supporting system preference and manual selection",slug:"supporting-system-preference-and-manual-selection",children:[]},{title:"Customizing the class name",slug:"customizing-the-class-name",children:[]}]}]}},72788:function(n,s,a){"use strict";a.d(s,{L:function(){return c}});var t=a(85893),e=a(97903),p=a(77929),o=a(87308);function c(n){return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(p.Dx,{children:n.layoutProps.meta.metaTitle||n.layoutProps.meta.title}),(0,t.jsx)(e.C,{nav:o.u,...n})]})}c.nav=o.u},11151:function(n,s,a){"use strict";a.d(s,{Zo:function(){return c},ah:function(){return p}});var t=a(67294);let e=t.createContext({});function p(n){let s=t.useContext(e);return t.useMemo(()=>"function"==typeof n?n(s):{...s,...n},[s,n])}let o={};function c({components:n,children:s,disableParentContext:a}){let c;return c=a?"function"==typeof n?n({}):n||o:p(n),t.createElement(e.Provider,{value:c},s)}}},function(n){n.O(0,[3430,2152,9495,224,7308,9774,2888,179],function(){return n(n.s=96841)}),_N_E=n.O()}]);