(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7787],{97813:function(n,a,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/upgrade-guide",function(){return s(19511)}])},19511:function(n,a,s){"use strict";s.r(a);var e=s(85893),t=s(11151),p=s(72788),l=s(36336);let o=p.L,c=l.X_;function i(n){let a=Object.assign({p:"p",a:"a",hr:"hr",pre:"pre",code:"code",em:"em",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,t.ah)(),n.components),{Heading:s,Editor:p}=a;return p||u("Editor",!0),s||u("Heading",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(a.p,{children:"Tailwind CSS v3.0 is a major update to the framework with a brand new internal engine and as such includes a small number of breaking changes."}),"\n",(0,e.jsx)(a.p,{children:"We take stability very seriously and have worked hard to make any breaking changes as painless as possible. For most projects, upgrading to Tailwind CSS v3.0 should take less than 30 minutes."}),"\n",(0,e.jsx)("div",{className:"aspect-w-16 aspect-h-9 my-12 rounded-lg overflow-hidden",children:(0,e.jsx)("iframe",{src:"https://www.youtube.com/embed/waoOK5s9ypc",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})}),"\n",(0,e.jsxs)(a.p,{children:["To learn more about what’s new in Tailwind CSS v3.0, read the ",(0,e.jsx)(a.a,{href:"/blog/tailwindcss-v3",children:"Tailwind CSS v3.0 announcement"})," on our blog."]}),"\n",(0,e.jsx)(a.hr,{}),"\n",(0,e.jsx)(s,{level:2,id:"upgrade-packages",children:"Upgrade packages"}),"\n",(0,e.jsx)(a.p,{children:"Update Tailwind, as well as PostCSS and autoprefixer, using npm:"}),"\n",(0,e.jsx)(a.pre,{className:"language-shell",dangerouslySetInnerHTML:{__html:'<code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> tailwindcss@latest postcss@latest autoprefixer@latest</code>'}}),"\n",(0,e.jsxs)(a.p,{children:["Note that Tailwind CSS v3.0 requires PostCSS 8, and no longer supports PostCSS 7. If you can’t upgrade to PostCSS 8, we recommend using ",(0,e.jsx)(a.a,{href:"/docs/installation",children:"Tailwind CLI"})," instead of installing Tailwind as a PostCSS plugin."]}),"\n",(0,e.jsxs)(a.p,{children:["If you are using nesting in your custom CSS (in combination with a PostCSS nesting plugin), you should also ",(0,e.jsxs)(a.a,{href:"https://tailwindcss.com/docs/using-with-preprocessors#nesting",children:["configure the ",(0,e.jsx)(a.code,{children:"tailwindcss/nesting"})," plugin"]})," in your PostCSS configuration to ensure compatibility with Tailwind CSS v3.0."]}),"\n",(0,e.jsx)(s,{level:3,id:"official-plugins",children:"Official plugins"}),"\n",(0,e.jsx)(a.p,{children:"All of our first-party plugins have been updated for compatibility with v3.0."}),"\n",(0,e.jsx)(a.p,{children:"If you’re using any of our plugins, make sure to update them all to the latest version at the same time to avoid version constraint errors."}),"\n",(0,e.jsx)(a.pre,{className:"language-html",dangerouslySetInnerHTML:{__html:'<code class="language-html">npm install -D tailwindcss@latest \\\n  <span class="code-highlight bg-code-highlight">@tailwindcss/typography@latest</span> \\\n  <span class="code-highlight bg-code-highlight">@tailwindcss/forms@latest</span> \\\n  <span class="code-highlight bg-code-highlight">@tailwindcss/aspect-ratio@latest</span> \\\n  <span class="code-highlight bg-code-highlight">@tailwindcss/line-clamp@latest</span> \\\n  postcss@latest \\\n  autoprefixer@latest</code>'}}),"\n",(0,e.jsx)(s,{level:3,id:"play-cdn",children:"Play CDN"}),"\n",(0,e.jsxs)(a.p,{children:["For Tailwind CSS v3.0, the CSS-based CDN build we’ve offered in the past has been replaced by the new ",(0,e.jsx)(a.a,{href:"/docs/installation/play-cdn",children:"Play CDN"}),", which gives you the full power of the new engine right in the browser with no build step."]}),"\n",(0,e.jsxs)(a.p,{children:["To try it out, throw this ",(0,e.jsx)(a.code,{children:"<script>"})," tag in your ",(0,e.jsx)(a.code,{children:"<head>"}),":"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html unchanged"><span class="token doctype punctuation">&lt;!</span><span class="token doctype doctype-tag">DOCTYPE</span><span class="token doctype"> </span><span class="token doctype name">html</span><span class="token doctype punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">html</span><span class="token tag"> </span><span class="token tag attr-name">lang</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">en</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;</span><span class="token tag">head</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">meta</span><span class="token tag"> </span><span class="token tag attr-name">charset</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">utf-8</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">meta</span><span class="token tag"> </span><span class="token tag attr-name">name</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">viewport</span><span class="token tag attr-value punctuation">"</span><span class="token tag"> </span><span class="token tag attr-name">content</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">width=device-width, initial-scale=1.0</span><span class="token tag attr-value punctuation">"</span><span class="token tag"> </span><span class="token tag punctuation">/></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">title</span><span class="token tag punctuation">></span><span class="token plain">Example</span><span class="token tag punctuation">&lt;/</span><span class="token tag">title</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain">    </span><span class="token tag punctuation">&lt;</span><span class="token tag">script</span><span class="token tag"> </span><span class="token tag attr-name">src</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">https://cdn.tailwindcss.com</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token script"></span><span class="token tag punctuation">&lt;/</span><span class="token tag">script</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;/</span><span class="token tag">head</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;</span><span class="token tag">body</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">    </span><span class="token comment">&lt;!-- --></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain">  </span><span class="token tag punctuation">&lt;/</span><span class="token tag">body</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html unchanged"><span class="token plain"></span><span class="token tag punctuation">&lt;/</span><span class="token tag">html</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsx)(a.p,{children:"The Play CDN is designed for development purposes only — compiling your own static CSS build is a much better choice in production."}),"\n",(0,e.jsx)(a.hr,{}),"\n",(0,e.jsx)(s,{level:2,id:"migrating-to-the-jit-engine",children:"Migrating to the JIT engine"}),"\n",(0,e.jsxs)(a.p,{children:["The new ",(0,e.jsx)(a.a,{href:"/blog/just-in-time-the-next-generation-of-tailwind-css",children:"Just-in-Time engine"})," we announced in March has replaced the classic engine in Tailwind CSS v3.0."]}),"\n",(0,e.jsx)(a.p,{children:"The new engine generates the styles you need for your project on-demand, and might necessitate some small changes to your project depending on how you have Tailwind configured."}),"\n",(0,e.jsxs)(a.p,{children:["If you were already opting in to ",(0,e.jsx)(a.code,{children:"mode: 'jit'"})," in Tailwind CSS v2.x, you can safely remove that from your configuration in v3.0:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'jit\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(s,{level:3,id:"configure-content-sources",children:"Configure content sources"}),"\n",(0,e.jsxs)(a.p,{children:["Since Tailwind no longer uses PurgeCSS under the hood, we’ve renamed the ",(0,e.jsx)(a.code,{children:"purge"})," option to ",(0,e.jsx)(a.code,{children:"content"})," to better reflect what it’s for:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">purge</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">  </span><span class="token literal-property property">content</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token comment">// Example content paths...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token string">\'./public/**/*.html\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token string">\'./src/**/*.{js,jsx,ts,tsx,vue}\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsxs)(a.p,{children:["If you weren’t already using the ",(0,e.jsx)(a.code,{children:"purge"})," option in your project, it’s crucial that you configure your template paths now or your compiled CSS will be empty."]}),"\n",(0,e.jsxs)(a.p,{children:["Since we’re not using PurgeCSS under the hood anymore, some of the advanced purge options have changed. See the new ",(0,e.jsx)(a.a,{href:"/docs/content-configuration",children:"content configuration"})," documentation for more information on advanced options."]}),"\n",(0,e.jsx)(s,{level:3,id:"remove-dark-mode-configuration",children:"Remove dark mode configuration"}),"\n",(0,e.jsxs)(a.p,{children:["The dark mode feature is now enabled using the ",(0,e.jsx)(a.code,{children:"media"})," strategy by default, so you can remove this key entirely from your ",(0,e.jsx)(a.code,{children:"tailwind.config.js"})," file, ",(0,e.jsx)(a.em,{children:"unless"})," you’re using the ",(0,e.jsx)(a.code,{children:"class"})," strategy."]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">darkMode</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'media\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsxs)(a.p,{children:["You can also safely remove this key if it’s currently set to ",(0,e.jsx)(a.code,{children:"false"}),":"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">darkMode</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(s,{level:3,id:"remove-variant-configuration",children:"Remove variant configuration"}),"\n",(0,e.jsxs)(a.p,{children:["In Tailwind CSS v3.0, every variant is automatically available for every utility by default, so you can remove the ",(0,e.jsx)(a.code,{children:"variants"})," section from your ",(0,e.jsx)(a.code,{children:"tailwind.config.js"})," file:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">variants</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">    </span><span class="token literal-property property">extend</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">      </span><span class="token literal-property property">padding</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">[</span><span class="token string">\'hover\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(s,{level:3,id:"replace-variants-with-layer",children:"Replace @variants with @layer"}),"\n",(0,e.jsxs)(a.p,{children:["Since all variants are now enabled by default, you no longer need to explicitly enable these for custom CSS using the ",(0,e.jsx)(a.code,{children:"@variants"})," or ",(0,e.jsx)(a.code,{children:"@responsive"})," directives."]}),"\n",(0,e.jsxs)(a.p,{children:["Instead, add any custom CSS to appropriate “layer” using the ",(0,e.jsx)(a.code,{children:"@layer"})," directive:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-css",dangerouslySetInnerHTML:{__html:'<code class="language-diff-css"><span class="token language-css deleted"><span class="token plain"> </span><span class="token atrule rule">@variants</span><span class="token atrule"> hover</span><span class="token atrule punctuation">,</span><span class="token atrule"> focus</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-css inserted"><span class="token plain"> </span><span class="token atrule rule">@layer</span><span class="token atrule"> utilities</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain">   </span><span class="token selector class">.content-auto</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain">     </span><span class="token property">content-visibility</span><span class="token punctuation">:</span><span class="token plain"> auto</span><span class="token punctuation">;</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain">   </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain"> </span><span class="token punctuation">}</span>\n</span></code>'}}),"\n",(0,e.jsx)(a.p,{children:"Any custom CSS added to one of Tailwind’s layers will automatically support variants."}),"\n",(0,e.jsxs)(a.p,{children:["See the documentation on ",(0,e.jsx)(a.a,{href:"/docs/adding-custom-styles#using-css-and-layer",children:"adding custom styles using CSS and @layer"})," for more information."]}),"\n",(0,e.jsx)(s,{level:3,id:"automatic-transforms-and-filters",children:"Automatic transforms and filters"}),"\n",(0,e.jsxs)(a.p,{children:["In Tailwind CSS v3.0, transform and filter utilities like ",(0,e.jsx)(a.code,{children:"scale-50"})," and ",(0,e.jsx)(a.code,{children:"brightness-75"})," will automatically take effect without needing to add the ",(0,e.jsx)(a.code,{children:"transform"}),", ",(0,e.jsx)(a.code,{children:"filter"}),", or ",(0,e.jsx)(a.code,{children:"backdrop-filter"})," classes:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">transform scale-50 filter grayscale backdrop-filter backdrop-blur-sm</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">scale-50 grayscale backdrop-blur-sm</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsxs)(a.p,{children:["While there’s no harm in leaving them in your HTML, they can safely be removed — with one exception. If you’re relying on ",(0,e.jsx)(a.code,{children:"transform"})," to create a new stacking context, you may want to leave it, otherwise you may run into z-order issues. Alternatively, replace it with ",(0,e.jsx)(a.code,{children:"relative"})," or ",(0,e.jsx)(a.code,{children:"isolate"})," to force a new stacking context."]}),"\n",(0,e.jsx)(s,{level:3,id:"new-opacity-modifier-syntax",children:"New opacity modifier syntax"}),"\n",(0,e.jsxs)(a.p,{children:["The new engine introduces ",(0,e.jsx)(a.a,{href:"https://tailwindcss.com/docs/background-color#changing-the-opacity",children:"a new syntax"})," for changing the opacity of color utilities that we recommend migrating to from utilities like ",(0,e.jsx)(a.code,{children:"bg-opacity-{value}"}),":"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">bg-black bg-opacity-25</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">bg-black/25</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsxs)(a.p,{children:["The old approach still works in all cases except when using a ",(0,e.jsx)(a.code,{children:"border-opacity-*"})," utility with the default ",(0,e.jsx)(a.code,{children:"border"})," class — in v3 you’ll need to explicitly specify your border color:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">border border-opacity-25</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">border border-gray-200/25</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsxs)(a.p,{children:["Every other situation behaves the same, so aside from that change your projects will work exactly as they did before. We do recommend using the new syntax going forward though, and plan to disable utilities like ",(0,e.jsx)(a.code,{children:"border-opacity-*"})," and ",(0,e.jsx)(a.code,{children:"bg-opacity-*"})," by default in v4, though you will still be able to enable them if needed."]}),"\n",(0,e.jsxs)(a.p,{children:["This new syntax works for all color utilities, even utilities that didn’t have any way to change the opacity in the past like ",(0,e.jsx)(a.code,{children:"from-red-500/75"}),"."]}),"\n",(0,e.jsx)(a.hr,{}),"\n",(0,e.jsx)(s,{level:2,id:"color-palette-changes",children:"Color palette changes"}),"\n",(0,e.jsx)(a.p,{children:"Tailwind CSS v3.0 now includes every color from the extended color palette by default, including previously disabled colors like cyan, rose, fuchsia, and lime, and all five variations of gray."}),"\n",(0,e.jsx)(s,{level:3,id:"removed-color-aliases",children:"Removed color aliases"}),"\n",(0,e.jsx)(a.p,{children:"In v2.0, several of the default colors were actually aliases for the extended colors:"}),"\n",(0,e.jsxs)(a.table,{children:[(0,e.jsx)(a.thead,{children:(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.th,{children:"v2 Default"}),(0,e.jsx)(a.th,{children:"v2 Extended"})]})}),(0,e.jsxs)(a.tbody,{children:[(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"green"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"emerald"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"yellow"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"amber"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"purple"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"violet"})})]})]})]}),"\n",(0,e.jsxs)(a.p,{children:["In v3.0, these colors use their extended names by default, so what was previously ",(0,e.jsx)(a.code,{children:"bg-green-500"})," is now ",(0,e.jsx)(a.code,{children:"bg-emerald-500"}),", and ",(0,e.jsx)(a.code,{children:"bg-green-500"})," now refers to the green from the extended palette."]}),"\n",(0,e.jsxs)(a.p,{children:["If you’re using these colors in your project, the simplest way to upgrade is to alias them back to their previous names in your ",(0,e.jsx)(a.code,{children:"tailwind.config.js"})," file:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token keyword">const</span><span class="token plain"> colors </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/colors\'</span><span class="token punctuation">)</span><span class="token plain"></span>\n</span><span class="token plain language-js unchanged">\n</span><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token literal-property property">extend</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">      </span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">        </span><span class="token literal-property property">green</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">emerald</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">        </span><span class="token literal-property property">yellow</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">amber</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">        </span><span class="token literal-property property">purple</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">violet</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">      </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(a.p,{children:"If you are already using a custom color palette, this change doesn’t impact you at all."}),"\n",(0,e.jsx)(s,{level:3,id:"renamed-gray-scales",children:"Renamed gray scales"}),"\n",(0,e.jsx)(a.p,{children:"As part of enabling all of the extended colors by default, we’ve given the different gray shades shorter single-word names to make them more practical to use and make it less awkward for them to co-exist at the same time."}),"\n",(0,e.jsxs)(a.table,{children:[(0,e.jsx)(a.thead,{children:(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.th,{children:"v2 Default"}),(0,e.jsx)(a.th,{children:"v2 Extended"}),(0,e.jsx)(a.th,{children:"v3 Unified"})]})}),(0,e.jsxs)(a.tbody,{children:[(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:"N/A"}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"blueGray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"slate"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"gray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"coolGray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"gray"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:"N/A"}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"gray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"zinc"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:"N/A"}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"trueGray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"neutral"})})]}),(0,e.jsxs)(a.tr,{children:[(0,e.jsx)(a.td,{children:"N/A"}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"warmGray"})}),(0,e.jsx)(a.td,{children:(0,e.jsx)(a.code,{children:"stone"})})]})]})]}),"\n",(0,e.jsx)(a.p,{children:"If you were referencing any of the extended grays, you should update your references to the new names, for example:"}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token keyword">const</span><span class="token plain"> colors </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'tailwindcss/colors\'</span><span class="token punctuation">)</span><span class="token plain"></span>\n</span><span class="token plain language-js unchanged">\n</span><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token literal-property property">extend</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">      </span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">        </span><span class="token literal-property property">gray</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">trueGray</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">        </span><span class="token literal-property property">gray</span><span class="token operator">:</span><span class="token plain"> colors</span><span class="token punctuation">.</span><span class="token property-access">neutral</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">      </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(a.p,{children:"If you weren’t referencing any of the grays from the extended color palette, this change doesn’t impact you at all."}),"\n",(0,e.jsx)(a.hr,{}),"\n",(0,e.jsx)(s,{level:2,id:"class-name-changes",children:"Class name changes"}),"\n",(0,e.jsx)(a.p,{children:"Some class names in Tailwind CSS v3.0 have changed to avoid naming collisions, improve the developer experience, or make it possible to support new features."}),"\n",(0,e.jsx)(a.p,{children:"Wherever possible we have preserved the old name as well so many of these changes are non-breaking, but you’re encouraged to update to the new class names."}),"\n",(0,e.jsx)(s,{level:3,id:"overflow-clip-ellipsis",children:"overflow-clip/ellipsis"}),"\n",(0,e.jsxs)(a.p,{children:["Those damn browser developers added a real ",(0,e.jsx)(a.code,{children:"overflow: clip"})," property, so using ",(0,e.jsx)(a.code,{children:"overflow-clip"})," for ",(0,e.jsx)(a.code,{children:"text-overflow: clip"})," is a really bad idea now."]}),"\n",(0,e.jsxs)(a.p,{children:["We’ve renamed ",(0,e.jsx)(a.code,{children:"overflow-clip"})," to ",(0,e.jsx)(a.code,{children:"text-clip"}),", and renamed ",(0,e.jsx)(a.code,{children:"overflow-ellipsis"})," to ",(0,e.jsx)(a.code,{children:"text-ellipsis"})," to avoid the naming collision:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">overflow-clip overflow-ellipsis</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">text-clip text-ellipsis</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsxs)(a.p,{children:["This is extremely unlikely to affect anyone, as there are very few use-cases for ",(0,e.jsx)(a.code,{children:"text-clip"})," and it’s only really included for the sake of completion."]}),"\n",(0,e.jsx)(s,{level:3,id:"flex-grow-shrink",children:"flex-grow/shrink"}),"\n",(0,e.jsxs)(a.p,{children:["We’ve added ",(0,e.jsx)(a.code,{children:"grow-*"})," and ",(0,e.jsx)(a.code,{children:"shrink-*"})," as aliases for ",(0,e.jsx)(a.code,{children:"flex-grow-*"})," and ",(0,e.jsx)(a.code,{children:"flex-shrink-*"}),":"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">flex-grow-0 flex-shrink</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">grow-0 shrink</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsx)(a.p,{children:"The old class names will always work but you’re encouraged to update to the new ones."}),"\n",(0,e.jsx)(s,{level:3,id:"outline-black-white",children:"outline-black/white"}),"\n",(0,e.jsxs)(a.p,{children:["Since browsers are finally starting to respect border radius when rendering outlines, we’ve added separate utilities for the ",(0,e.jsx)(a.code,{children:"outline-style"}),", ",(0,e.jsx)(a.code,{children:"outline-color"}),", ",(0,e.jsx)(a.code,{children:"outline-width"})," and ",(0,e.jsx)(a.code,{children:"outline-offset"})," properties."]}),"\n",(0,e.jsxs)(a.p,{children:["This means that ",(0,e.jsx)(a.code,{children:"outline-white"})," and ",(0,e.jsx)(a.code,{children:"outline-black"})," now only set the outline ",(0,e.jsx)(a.em,{children:"color"}),", whereas in v2 they set the color, width, style, and offset."]}),"\n",(0,e.jsxs)(a.p,{children:["If you are using ",(0,e.jsx)(a.code,{children:"outline-white"})," or ",(0,e.jsx)(a.code,{children:"outline-black"})," in your project, you can bring back the old styles by adding the following custom CSS to your project:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-css",dangerouslySetInnerHTML:{__html:'<code class="language-css"><span class="token atrule"><span class="token rule">@layer</span> utilities</span> <span class="token punctuation">{</span>\n  <span class="token selector"><span class="token class">.outline-black</span></span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token unit">px</span> dotted <span class="token color">black</span><span class="token punctuation">;</span>\n    <span class="token property">outline-offset</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token unit">px</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token selector"><span class="token class">.outline-white</span></span> <span class="token punctuation">{</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token unit">px</span> dotted <span class="token color">white</span><span class="token punctuation">;</span>\n    <span class="token property">outline-offset</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token unit">px</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code>'}}),"\n",(0,e.jsx)(a.p,{children:"Alternatively, you can update any usage of them in your CSS with the following classes:"}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">outline-black</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">outline-black outline-2 outline-dotted outline-offset-2</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token plain language-html unchanged">\n</span><span class="token language-html deleted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">outline-white</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">outline-white outline-2 outline-dotted outline-offset-2</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsx)(s,{level:3,id:"decoration-clone-slice",children:"decoration-clone/slice"}),"\n",(0,e.jsxs)(a.p,{children:["We’ve added ",(0,e.jsx)(a.code,{children:"box-decoration-clone"})," and ",(0,e.jsx)(a.code,{children:"box-decoration-slice"})," as aliases for ",(0,e.jsx)(a.code,{children:"decoration-clone"})," and ",(0,e.jsx)(a.code,{children:"decoration-slice"})," to avoid confusion with all of the new ",(0,e.jsx)(a.code,{children:"text-decoration"})," utilities that use the ",(0,e.jsx)(a.code,{children:"decoration-"})," namespace:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">decoration-clone</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token tag punctuation">&lt;/</span><span class="token tag">div</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">box-decoration-clone</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token tag punctuation">&lt;/</span><span class="token tag">div</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token plain language-html unchanged">\n</span><span class="token language-html deleted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">decoration-slice</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token tag punctuation">&lt;/</span><span class="token tag">div</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">div</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">box-decoration-slice</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token tag punctuation">&lt;/</span><span class="token tag">div</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsx)(a.p,{children:"The old class names will always work but you’re encouraged to update to the new ones."}),"\n",(0,e.jsx)(a.hr,{}),"\n",(0,e.jsx)(s,{level:2,id:"other-minor-changes",children:"Other minor changes"}),"\n",(0,e.jsx)(a.p,{children:"Tailwind CSS v3.0 necessitates a couple of other small breaking changes that are unlikely to affect many people, but have been captured here."}),"\n",(0,e.jsx)(s,{level:3,id:"separator-cannot-be-a-dash",children:"Separator cannot be a dash"}),"\n",(0,e.jsxs)(a.p,{children:["The dash (",(0,e.jsx)(a.code,{children:"-"}),") character cannot be used as a custom separator in v3.0 because of a parsing ambiguity it introduces in the engine."]}),"\n",(0,e.jsxs)(a.p,{children:["You’ll have to switch to another character like ",(0,e.jsx)(a.code,{children:"_"})," instead:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js deleted"><span class="token plain">  </span><span class="token literal-property property">separator</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'-\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">  </span><span class="token literal-property property">separator</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'_\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(s,{level:3,id:"prefix-cannot-be-a-function",children:"Prefix cannot be a function"}),"\n",(0,e.jsx)(a.p,{children:"Prior to Tailwind CSS v3.0, it was possible to define your class prefix as a function:"}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token function">prefix</span><span class="token punctuation">(</span><span class="token parameter">selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(a.p,{children:"This isn’t possible in the new engine and we’ve had to remove support for this feature."}),"\n",(0,e.jsx)(a.p,{children:"Instead, use a static prefix that is the same for every class Tailwind generates:"}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token property-access">exports</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">\'tw-\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre>'}),"\n",(0,e.jsx)(s,{level:3,id:"file-modifier-order-reversed",children:"File modifier order reversed"}),"\n",(0,e.jsxs)(a.p,{children:["Super minor change since v3.0.0-alpha.2 where the ",(0,e.jsx)(a.code,{children:"file"})," modifier was introduced — if you were combining it with other modifiers like ",(0,e.jsx)(a.code,{children:"hover"})," or ",(0,e.jsx)(a.code,{children:"focus"}),", you’ll need to flip the modifier order:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-html",dangerouslySetInnerHTML:{__html:'<code class="language-diff-html"><span class="token language-html deleted"><span class="token tag punctuation">&lt;</span><span class="token tag">input</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">file:hover:bg-blue-600 ...</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span><span class="token plain"></span>\n</span><span class="token language-html inserted"><span class="token plain"></span><span class="token tag punctuation">&lt;</span><span class="token tag">input</span><span class="token tag"> </span><span class="token tag attr-name">class</span><span class="token tag attr-value punctuation attr-equals">=</span><span class="token tag attr-value punctuation">"</span><span class="token tag attr-value">hover:file:bg-blue-600 ...</span><span class="token tag attr-value punctuation">"</span><span class="token tag punctuation">></span>\n</span></code>'}}),"\n",(0,e.jsxs)(a.p,{children:["Learn more in the ",(0,e.jsx)(a.a,{href:"/docs/hover-focus-and-other-states#ordering-stacked-modifiers",children:"ordering stacked modifiers"})," documentation."]}),"\n",(0,e.jsx)(s,{level:3,id:"fill-and-stroke-use-color-palette",children:"Fill and stroke use color palette"}),"\n",(0,e.jsxs)(a.p,{children:["The ",(0,e.jsx)(a.code,{children:"fill-{color}"})," and ",(0,e.jsx)(a.code,{children:"stroke-{color}"})," utilities mirror your ",(0,e.jsx)(a.code,{children:"theme.colors"})," key by default now. This isn’t a breaking change if you haven’t customized your color palette, but if you have, the ",(0,e.jsx)(a.code,{children:"fill-current"})," and ",(0,e.jsx)(a.code,{children:"stroke-current"})," classes may not work if you don’t have ",(0,e.jsx)(a.code,{children:"current"})," included in your own custom color palette."]}),"\n",(0,e.jsxs)(a.p,{children:["Add ",(0,e.jsx)(a.code,{children:"current"})," to your custom color palette to resolve this:"]}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token literal-property property">colors</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">      </span><span class="token literal-property property">current</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string">\'currentColor\'</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">      </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">    </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(s,{level:3,id:"negative-values-removed",children:"Negative values removed"}),"\n",(0,e.jsxs)(a.p,{children:["The negative prefix in utilites like ",(0,e.jsx)(a.code,{children:"-mx-4"})," is a first class feature in Tailwind now, rather than something driven by your theme, so you can add ",(0,e.jsx)(a.code,{children:"-"})," in front of any utility that support negative values and it will just work."]}),"\n",(0,e.jsxs)(a.p,{children:["The negative values have been removed from the default theme, so if you were referencing them with ",(0,e.jsx)(a.code,{children:"theme()"}),", you will see an error when trying to compile your CSS."]}),"\n",(0,e.jsxs)(a.p,{children:["Use the ",(0,e.jsx)(a.code,{children:"calc()"})," function to update any affected code:"]}),"\n",(0,e.jsx)(a.pre,{className:"language-diff-css",dangerouslySetInnerHTML:{__html:'<code class="language-diff-css"><span class="token language-css unchanged"><span class="token selector class">.my-class</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-css deleted"><span class="token plain">  </span><span class="token property">top</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'top.-4\'</span><span class="token punctuation">)</span><span class="token plain"></span>\n</span><span class="token language-css inserted"><span class="token plain">  </span><span class="token property">top</span><span class="token punctuation">:</span><span class="token plain"> </span><span class="token function">calc</span><span class="token punctuation">(</span><span class="token function">theme</span><span class="token punctuation">(</span><span class="token string">\'top.4\'</span><span class="token punctuation">)</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token number">-1</span><span class="token punctuation">)</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code>'}}),"\n",(0,e.jsx)(s,{level:3,id:"base-layer-must-be-present",children:"Base layer must be present"}),"\n",(0,e.jsxs)(a.p,{children:["In Tailwind CSS v3.0, the ",(0,e.jsx)(a.code,{children:"@tailwind base"})," directive must be present for utilities like transforms, filters, and shadows to work as expected."]}),"\n",(0,e.jsxs)(a.p,{children:["If you were previously disabling Tailwind’s base styles by not including this directive, you should add it back and disable ",(0,e.jsx)(a.code,{children:"preflight"})," in your ",(0,e.jsx)(a.code,{children:"corePlugins"})," configuration instead:"]}),"\n",(0,e.jsx)(p,{filename:"main.css",code:'<pre class="language-diff-css"><code class="language-diff-css"><span class="token language-css inserted"><span class="token plain"> </span><span class="token atrule rule">@tailwind</span><span class="token atrule"> base</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain"> </span><span class="token atrule rule">@tailwind</span><span class="token atrule"> components</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token language-css unchanged"><span class="token plain"> </span><span class="token atrule rule">@tailwind</span><span class="token atrule"> utilities</span><span class="token atrule punctuation">;</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(p,{filename:"tailwind.config.js",code:'<pre class="language-diff-js"><code class="language-diff-js"><span class="token language-js unchanged"><span class="token plain">module</span><span class="token punctuation">.</span><span class="token property-access">exports</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain">  </span><span class="token comment">// ...</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">  </span><span class="token literal-property property">corePlugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation">{</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">    </span><span class="token literal-property property">preflight</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js inserted"><span class="token plain">  </span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token plain"></span>\n</span><span class="token language-js unchanged"><span class="token plain"></span><span class="token punctuation">}</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(a.p,{children:"This will disable Tailwind’s global base styles without affecting utilities that rely on adding their own base styles to function correctly."}),"\n",(0,e.jsx)(s,{level:3,id:"screens-layer-has-been-renamed",children:"Screens layer has been renamed"}),"\n",(0,e.jsxs)(a.p,{children:["The ",(0,e.jsx)(a.code,{children:"@tailwind screens"})," layer has been renamed to ",(0,e.jsx)(a.code,{children:"@tailwind variants"}),":"]}),"\n",(0,e.jsx)(p,{filename:"main.css",code:'<pre class="language-diff-css"><code class="language-diff-css"><span class="token language-css unchanged"><span class="token plain"> </span><span class="token comment">/* ... */</span><span class="token plain"></span>\n</span><span class="token language-css deleted"><span class="token plain"> </span><span class="token atrule rule">@tailwind</span><span class="token atrule"> screens</span><span class="token atrule punctuation">;</span><span class="token plain"></span>\n</span><span class="token language-css inserted"><span class="token plain"> </span><span class="token atrule rule">@tailwind</span><span class="token atrule"> variants</span><span class="token atrule punctuation">;</span>\n</span></code></pre>'}),"\n",(0,e.jsx)(a.p,{children:"I think you are more likely to be attacked by a shark while working at your desk than you are to be affected by this change."})]})}function r(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,e.jsx)(c,Object.assign({},n,{children:(0,e.jsx)(i,n)}))}function u(n,a){throw Error("Expected "+(a?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}a.default=r,r.layoutProps={Layout:o,meta:{title:"Upgrade Guide",description:"Upgrading your Tailwind CSS projects from v2 to v3."},slug:"upgrade-guide",tableOfContents:[{title:"Upgrade packages",slug:"upgrade-packages",children:[{title:"Official plugins",slug:"official-plugins",children:[]},{title:"Play CDN",slug:"play-cdn",children:[]}]},{title:"Migrating to the JIT engine",slug:"migrating-to-the-jit-engine",children:[{title:"Configure content sources",slug:"configure-content-sources",children:[]},{title:"Remove dark mode configuration",slug:"remove-dark-mode-configuration",children:[]},{title:"Remove variant configuration",slug:"remove-variant-configuration",children:[]},{title:"Replace @variants with @layer",slug:"replace-variants-with-layer",children:[]},{title:"Automatic transforms and filters",slug:"automatic-transforms-and-filters",children:[]},{title:"New opacity modifier syntax",slug:"new-opacity-modifier-syntax",children:[]}]},{title:"Color palette changes",slug:"color-palette-changes",children:[{title:"Removed color aliases",slug:"removed-color-aliases",children:[]},{title:"Renamed gray scales",slug:"renamed-gray-scales",children:[]}]},{title:"Class name changes",slug:"class-name-changes",children:[{title:"overflow-clip/ellipsis",slug:"overflow-clip-ellipsis",children:[]},{title:"flex-grow/shrink",slug:"flex-grow-shrink",children:[]},{title:"outline-black/white",slug:"outline-black-white",children:[]},{title:"decoration-clone/slice",slug:"decoration-clone-slice",children:[]}]},{title:"Other minor changes",slug:"other-minor-changes",children:[{title:"Separator cannot be a dash",slug:"separator-cannot-be-a-dash",children:[]},{title:"Prefix cannot be a function",slug:"prefix-cannot-be-a-function",children:[]},{title:"File modifier order reversed",slug:"file-modifier-order-reversed",children:[]},{title:"Fill and stroke use color palette",slug:"fill-and-stroke-use-color-palette",children:[]},{title:"Negative values removed",slug:"negative-values-removed",children:[]},{title:"Base layer must be present",slug:"base-layer-must-be-present",children:[]},{title:"Screens layer has been renamed",slug:"screens-layer-has-been-renamed",children:[]}]}]}},72788:function(n,a,s){"use strict";s.d(a,{L:function(){return o}});var e=s(85893),t=s(97903),p=s(77929),l=s(87308);function o(n){return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(p.Dx,{children:n.layoutProps.meta.metaTitle||n.layoutProps.meta.title}),(0,e.jsx)(t.C,{nav:l.u,...n})]})}o.nav=l.u},11151:function(n,a,s){"use strict";s.d(a,{Zo:function(){return o},ah:function(){return p}});var e=s(67294);let t=e.createContext({});function p(n){let a=e.useContext(t);return e.useMemo(()=>"function"==typeof n?n(a):{...a,...n},[a,n])}let l={};function o({components:n,children:a,disableParentContext:s}){let o;return o=s?"function"==typeof n?n({}):n||l:p(n),e.createElement(t.Provider,{value:o},a)}}},function(n){n.O(0,[3430,2152,9495,224,7308,9774,2888,179],function(){return n(n.s=97813)}),_N_E=n.O()}]);